version: '3.3'

services:
  publicwebsite:
    build:
      context: ./src/Frontend/PublicWebsite
      dockerfile: ../../../Dockerfile.frontend
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
    container_name: batuara-public-website
    ports:
      - "${PUBLIC_WEBSITE_PORT:-3000}:80"
    networks:
      - batuara-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  admindashboard:
    build:
      context: ./src/Frontend/AdminDashboard
      dockerfile: ../../../Dockerfile.frontend
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
    container_name: batuara-admin-dashboard
    ports:
      - "${ADMIN_DASHBOARD_PORT:-3001}:80"
    networks:
      - batuara-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API (opcional - descomente quando necessário)
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.api
  #   container_name: batuara-api
  #   ports:
  #     - "${API_PORT:-8080}:8080"
  #   environment:
  #     - ConnectionStrings__DefaultConnection=Host=db;Database=batuara_db;Username=batuara_user;Password=${DB_PASSWORD}
  #     - ASPNETCORE_URLS=http://+:8080
  #   networks:
  #     - batuara-net
  #   restart: unless-stopped
  #   depends_on:
  #     - db

  # Database (opcional - descomente quando necessário)
  # db:
  #   image: postgres:15-alpine
  #   container_name: batuara-db
  #   environment:
  #     - POSTGRES_DB=batuara_db
  #     - POSTGRES_USER=batuara_user
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - batuara-db-data:/var/lib/postgresql/data
  #   networks:
  #     - batuara-net
  #   restart: unless-stopped

networks:
  batuara-net:
    driver: bridge

# volumes:
#   batuara-db-data: