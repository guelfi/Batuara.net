#!/bin/bash

# Script para configurar SSH tunneling sem privil√©gios administrativos
# Permite acesso aos frontends via localhost no Windows

echo "=== Configura√ß√£o de SSH Tunneling para Frontends ==="
echo "Este script configura t√∫neis SSH para acessar os frontends do WSL no Windows"
echo ""

# Verificar se o SSH est√° dispon√≠vel
if ! command -v ssh &> /dev/null; then
    echo "‚ùå SSH n√£o est√° instalado. Instalando..."
    sudo apt update && sudo apt install -y openssh-client
fi

# Obter IP do WSL
WSL_IP=$(hostname -I | awk '{print $1}')
echo "üìç IP do WSL: $WSL_IP"

# Verificar se os frontends est√£o rodando
echo "üîç Verificando frontends..."
if netstat -tuln | grep -q ":3000.*LISTEN"; then
    echo "‚úÖ PublicWebsite rodando na porta 3000"
else
    echo "‚ùå PublicWebsite n√£o est√° rodando na porta 3000"
fi

if netstat -tuln | grep -q ":3001.*LISTEN"; then
    echo "‚úÖ AdminDashboard rodando na porta 3001"
else
    echo "‚ùå AdminDashboard n√£o est√° rodando na porta 3001"
fi

echo ""
echo "=== Instru√ß√µes para SSH Tunneling ==="
echo "1. Abra o PowerShell no Windows como usu√°rio normal (n√£o precisa ser admin)"
echo "2. Execute os seguintes comandos:"
echo ""
echo "   # Para PublicWebsite (porta 3000):"
echo "   ssh -L 3000:$WSL_IP:3000 $USER@$WSL_IP -N"
echo ""
echo "   # Para AdminDashboard (porta 3001):"
echo "   ssh -L 3001:$WSL_IP:3001 $USER@$WSL_IP -N"
echo ""
echo "3. Ap√≥s executar os comandos, acesse:"
echo "   - PublicWebsite: http://localhost:3000"
echo "   - AdminDashboard: http://localhost:3001"
echo ""
echo "=== Alternativa: Acesso Direto via IP WSL ==="
echo "Voc√™ tamb√©m pode acessar diretamente via:"
echo "   - PublicWebsite: http://$WSL_IP:3000"
echo "   - AdminDashboard: http://$WSL_IP:3001"
echo ""
echo "=== Configura√ß√£o do SSH (se necess√°rio) ==="
echo "Se o SSH n√£o estiver configurado, execute:"
echo "   sudo systemctl enable ssh"
echo "   sudo systemctl start ssh"
echo ""
echo "‚ú® Configura√ß√£o conclu√≠da!"