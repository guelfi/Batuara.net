#!/bin/bash

echo "üîç DIAGN√ìSTICO DE ASSETS - BATUARA PUBLICWEBSITE"
echo "================================================"
echo "Data: $(date)"
echo "Servidor: $(hostname)"
echo ""

# Verificar se o container est√° rodando
echo "üì¶ STATUS DO CONTAINER:"
echo "----------------------"
if docker ps | grep -q "batuara-public-website"; then
    echo "‚úÖ Container batuara-public-website est√° RODANDO"
    CONTAINER_STATUS="running"
else
    echo "‚ùå Container batuara-public-website N√ÉO est√° rodando"
    echo "Containers ativos:"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    CONTAINER_STATUS="stopped"
fi
echo ""

# Se o container estiver rodando, fazer diagn√≥sticos detalhados
if [ "$CONTAINER_STATUS" = "running" ]; then
    echo "üìÅ ESTRUTURA DE ARQUIVOS NO CONTAINER:"
    echo "-------------------------------------"
    echo "Listando /usr/share/nginx/html/:"
    docker exec batuara-public-website ls -la /usr/share/nginx/html/ || echo "‚ùå Erro ao listar arquivos"
    echo ""
    
    echo "üñºÔ∏è ASSETS ENCONTRADOS:"
    echo "----------------------"
    echo "Procurando por imagens e √≠cones:"
    docker exec batuara-public-website find /usr/share/nginx/html/ -name "*.png" -o -name "*.jpg" -o -name "*.ico" -o -name "*.svg" 2>/dev/null || echo "‚ùå Erro ao procurar assets"
    echo ""
    
    echo "üìÑ VERIFICANDO ARQUIVOS CR√çTICOS:"
    echo "---------------------------------"
    
    # Verificar favicon.ico
    if docker exec batuara-public-website test -f /usr/share/nginx/html/favicon.ico; then
        echo "‚úÖ favicon.ico encontrado"
        docker exec batuara-public-website ls -la /usr/share/nginx/html/favicon.ico
    else
        echo "‚ùå favicon.ico N√ÉO encontrado"
    fi
    
    # Verificar batuara_logo.png
    if docker exec batuara-public-website test -f /usr/share/nginx/html/batuara_logo.png; then
        echo "‚úÖ batuara_logo.png encontrado"
        docker exec batuara-public-website ls -la /usr/share/nginx/html/batuara_logo.png
    else
        echo "‚ùå batuara_logo.png N√ÉO encontrado"
    fi
    
    # Verificar index.html
    if docker exec batuara-public-website test -f /usr/share/nginx/html/index.html; then
        echo "‚úÖ index.html encontrado"
        echo "Verificando refer√™ncias ao favicon no index.html:"
        docker exec batuara-public-website grep -i "favicon" /usr/share/nginx/html/index.html || echo "Nenhuma refer√™ncia ao favicon encontrada"
    else
        echo "‚ùå index.html N√ÉO encontrado"
    fi
    echo ""
    
    echo "üåê TESTANDO ACESSO HTTP AOS ASSETS:"
    echo "-----------------------------------"
    
    # Testar favicon.ico
    echo "Testando http://localhost:3000/favicon.ico:"
    FAVICON_RESPONSE=$(curl -s -I http://localhost:3000/favicon.ico | head -n 1)
    if echo "$FAVICON_RESPONSE" | grep -q "200"; then
        echo "‚úÖ favicon.ico acess√≠vel: $FAVICON_RESPONSE"
        # Verificar Content-Type
        FAVICON_TYPE=$(curl -s -I http://localhost:3000/favicon.ico | grep -i "content-type" || echo "Content-Type n√£o encontrado")
        echo "   Content-Type: $FAVICON_TYPE"
    else
        echo "‚ùå favicon.ico n√£o acess√≠vel: $FAVICON_RESPONSE"
    fi
    
    # Testar batuara_logo.png
    echo "Testando http://localhost:3000/batuara_logo.png:"
    LOGO_RESPONSE=$(curl -s -I http://localhost:3000/batuara_logo.png | head -n 1)
    if echo "$LOGO_RESPONSE" | grep -q "200"; then
        echo "‚úÖ batuara_logo.png acess√≠vel: $LOGO_RESPONSE"
        # Verificar Content-Type
        LOGO_TYPE=$(curl -s -I http://localhost:3000/batuara_logo.png | grep -i "content-type" || echo "Content-Type n√£o encontrado")
        echo "   Content-Type: $LOGO_TYPE"
    else
        echo "‚ùå batuara_logo.png n√£o acess√≠vel: $LOGO_RESPONSE"
    fi
    
    # Testar p√°gina principal
    echo "Testando http://localhost:3000/:"
    MAIN_RESPONSE=$(curl -s -I http://localhost:3000/ | head -n 1)
    if echo "$MAIN_RESPONSE" | grep -q "200"; then
        echo "‚úÖ P√°gina principal acess√≠vel: $MAIN_RESPONSE"
    else
        echo "‚ùå P√°gina principal n√£o acess√≠vel: $MAIN_RESPONSE"
    fi
    
    echo ""
    echo "üîß TESTANDO CONFIGURA√á√ÉO NGINX:"
    echo "-------------------------------"
    echo "Verificando configura√ß√£o nginx no container:"
    docker exec batuara-public-website cat /etc/nginx/conf.d/default.conf 2>/dev/null || echo "‚ùå Erro ao ler configura√ß√£o nginx"
    echo ""
    
    echo "üìã LOGS DO NGINX (√∫ltimas 20 linhas):"
    echo "-------------------------------------"
    docker logs batuara-public-website --tail 20 2>/dev/null || echo "‚ùå Erro ao obter logs"
    echo ""
    
    echo "üö® ERROS 404 NOS LOGS:"
    echo "----------------------"
    docker logs batuara-public-website 2>/dev/null | grep -E "(404|favicon|logo|\.png|\.ico)" | tail -10 || echo "Nenhum erro 404 relacionado a assets encontrado"
    echo ""
    
    echo "‚öôÔ∏è CONFIGURA√á√ÉO DO NGINX:"
    echo "-------------------------"
    echo "Verificando configura√ß√£o do nginx:"
    docker exec batuara-public-website cat /etc/nginx/conf.d/default.conf 2>/dev/null || echo "‚ùå Erro ao ler configura√ß√£o do nginx"
    echo ""
fi

echo "üê≥ INFORMA√á√ïES DOS CONTAINERS:"
echo "------------------------------"
docker ps -a | grep batuara || echo "Nenhum container batuara encontrado"
echo ""

echo "üìä RESUMO DO DIAGN√ìSTICO:"
echo "========================="
if [ "$CONTAINER_STATUS" = "running" ]; then
    echo "- Container: ‚úÖ Rodando"
    echo "- Para corrigir problemas de assets:"
    echo "  1. Verifique se os arquivos est√£o no container"
    echo "  2. Teste o acesso HTTP direto aos assets"
    echo "  3. Analise os logs do nginx para erros 404"
    echo "  4. Verifique a configura√ß√£o do nginx"
else
    echo "- Container: ‚ùå N√£o est√° rodando"
    echo "- Primeiro inicie o container com: docker-compose up -d"
fi
echo ""
echo "üîß Para executar corre√ß√µes, use os pr√≥ximos scripts do plano de implementa√ß√£o."
echo "================================================"